What happens when you initialize a repository? Why do you need to do it?

	1. A repository is initialized.
	2. Because the repository won't be initialized.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The working directory is the folder containing the files you may wish to work on. The repository is the place where you will want to put those files after you have finished the work. So the value of the staging area is that it provides a temporary area, to stage the files you have worked on, before you commit them to the repository; this give you the ability of commiting only particular files instead of all the files in the working directory.

How can you use the staging area to make sure you have one commit per logical change?

	Commit straight after each logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When I'm experimenting or fixing a bug. I could test code and checkout that new branch when all is fine, or revert to a previous branch.

How do the diagrams help you visualize the branch structure?

	Photons from my screen cause the generation of electrical signals in my brain.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	1. Interleved commits from both branches, and one remaining branch label worthy of deletion.
	2. To help the tutor visualize a simple structureal concept.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Pros:

		Saves time.

	Cons:

		Null.

